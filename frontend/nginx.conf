server {
  listen 80;
  listen [::]:80;
  server_name localhost;
  client_body_buffer_size 50m;
  client_max_body_size 100m;
  charset utf-8;

  gzip on;
  gzip_buffers 16 8k;
  gzip_comp_level 2;
  gzip_disable "msie6";
  gzip_http_version 1.0;
  gzip_min_length 1k;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain application/json text/css text/javascript application/javascript;
  gzip_vary on;

  add_header X-Frame-Options "SAMEORIGIN";

  location ~* /favicon.(ico|svg)$ {
    root /usr/share/nginx/html;
  }

  location ~* /*.(js)$ {
    root /usr/share/nginx/html;
  }

  location / {
      root /usr/share/nginx/html/apps/login;
      index index.html;
      try_files $uri $uri/ /index.html;
      expires off;
      add_header Cache-Control "no-cache";
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
  }

  location /supplier {
    expires off;
    alias /usr/share/nginx/html/apps/supplier;
    try_files /index.html =404;
    add_header Cache-Control "no-cache";
  }

  location /operator {
    expires off;
    alias /usr/share/nginx/html/apps/operator;
    try_files /index.html =404;
    add_header Cache-Control "no-cache";
  }

  location /assets {
    alias /usr/share/nginx/html/assets;
  }

  # location ~* \.(?:css|js|png|jpg|eot|svg|ttf|woff|woff2|map)$ {
  #   expires 1y;
  #   access_log off;
  #   add_header Cache-Control "public";
  # }

  location /api {
      proxy_pass http://backend:8080;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
  }

  location /docs {
      proxy_pass http://backend:8080;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
  }

  # CSS, Javascript and other static files
  location /robots.txt {
    add_header Content-Type text/plain;
    return 200 "User-agent: *\nDisallow: /\n";
    access_log off;
  }
}
